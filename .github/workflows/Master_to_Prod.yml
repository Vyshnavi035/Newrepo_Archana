name: Deploy master branch to production org

# This workflow is triggered by a push to the master branch
on:
  push:
    branches:
      - master  # You can change this to any branch name if required

jobs:
  deploy-branch-to-production-org:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}  # Exclude dependabot from triggering the workflow
    
    steps:
    # Step 1: Install Salesforce CLI (sfdx)
    - name: 'Install Salesforce CLI'
      run: |
        wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
        mkdir ~/sfdx
        tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
        echo "$HOME/sfdx/bin" >> $GITHUB_PATH
        ~/sfdx/bin/sfdx version

    # Step 2: Install sfdx-git-delta plugin to track metadata changes
    - name: 'Install sfdx-git-delta plugin'
      run: |
        echo y | sfdx plugins:install sfdx-git-delta
        sfdx plugins

    # Step 3: Checkout the source code from the repository
    - name: 'Checkout source code'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensure full history is fetched to track changes

    # Step 4: Store the Salesforce production org authentication URL from GitHub Secrets
    - name: 'Populate auth file with SFDX_URL secret of the production org'
      shell: bash
      run: |
        echo ${{ secrets.SFDX_URL_PROD }} > ./SFDX_PRODUCTION_URL.txt  # Save the URL to a file
        echo "SFDX_PRODUCTION_URL: $SFDX_PRODUCTION_URL.txt"  # Print confirmation

    # Step 5: Create delta packages for new, modified, or deleted metadata
    - name: 'Create delta packages for metadata changes'
      run: |
        mkdir changed-sources
        sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

    # Step 6: Authenticate to Salesforce Production Org using the stored auth URL
    - name: 'Authenticate to Production Org'
      run: sfdx auth:sfdxurl:store -f ./SFDX_PRODUCTION_URL.txt -s -a production

    # Step 7: Deploy the delta package (new, modified, or deleted metadata) to the production org
    - name: 'Deploy delta package to Production org'
      run: sfdx force:source:deploy -p changed-sources/force-app --testlevel NoTestRun

    # Optional Step 8: Deploy entire source (if needed)
    # - name: 'Deploy the entire source to Production org'
    #   run: sfdx force:source:deploy -p force-app --testlevel NoTestRun

    # Optional Step 9: Deploy destructive changes (if any) to Production org
    # - name: 'Deploy destructive changes to Production org'
    #   run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings
